using System;
using System.ComponentModel.Composition;
using System.IO;
using System.Linq;
using System.Collections.Generic;
using System.Reflection;
using XrmToolBox.Extensibility;
using XrmToolBox.Extensibility.Interfaces;

namespace XrmToolBox.AttachmentsDownloader
{
    // Do not forget to update version number and author (company attribute) in AssemblyInfo.cs class
    // To generate Base64 string for Images below, you can use https://www.base64-image.de/
    [Export(typeof(IXrmToolBoxPlugin)),
        ExportMetadata("Name", "Attachment Downloader"),
        ExportMetadata("Description", "Downlaod the attachments related to any entity in Dynamics 365 CRM. Use fetch xml to filter out records."),
        // Please specify the base64 content of a 32x32 pixels image
        ExportMetadata("SmallImageBase64", "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"),
        // Please specify the base64 content of a 80x80 pixels image
        ExportMetadata("BigImageBase64", ""),
        ExportMetadata("BackgroundColor", "Purple"),
        ExportMetadata("PrimaryFontColor", "White"),
        ExportMetadata("SecondaryFontColor", "White")]
    public class MyPlugin : PluginBase
    {
        public override IXrmToolBoxPluginControl GetControl()
        {
            return new MyPluginControl();
        }

        /// <summary>
        /// Constructor 
        /// </summary>
        public MyPlugin()
        {
            // If you have external assemblies that you need to load, uncomment the following to 
            // hook into the event that will fire when an Assembly fails to resolve
            // AppDomain.CurrentDomain.AssemblyResolve += new ResolveEventHandler(AssemblyResolveEventHandler);
        }

        /// <summary>
        /// Event fired by CLR when an assembly reference fails to load
        /// Assumes that related assemblies will be loaded from a subfolder named the same as the Plugin
        /// For example, a folder named Sample.XrmToolBox.MyPlugin 
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="args"></param>
        /// <returns></returns>
        private Assembly AssemblyResolveEventHandler(object sender, ResolveEventArgs args)
        {
            Assembly loadAssembly = null;
            Assembly currAssembly = Assembly.GetExecutingAssembly();

            // base name of the assembly that failed to resolve
            var argName = args.Name.Substring(0, args.Name.IndexOf(","));

            // check to see if the failing assembly is one that we reference.
            List<AssemblyName> refAssemblies = currAssembly.GetReferencedAssemblies().ToList();
            var refAssembly = refAssemblies.Where(a => a.Name == argName).FirstOrDefault();

            // if the current unresolved assembly is referenced by our plugin, attempt to load
            if (refAssembly != null)
            {
                // load from the path to this plugin assembly, not host executable
                string dir = Path.GetDirectoryName(currAssembly.Location).ToLower();
                string folder = Path.GetFileNameWithoutExtension(currAssembly.Location);
                dir = Path.Combine(dir, folder);

                var assmbPath = Path.Combine(dir, $"{argName}.dll");

                if (File.Exists(assmbPath))
                {
                    loadAssembly = Assembly.LoadFrom(assmbPath);
                }
                else
                {
                    throw new FileNotFoundException($"Unable to locate dependency: {assmbPath}");
                }
            }

            return loadAssembly;
        }
    }
}